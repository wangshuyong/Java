package com.bjsxt.proxy;

import java.io.File;
import java.io.FileWriter;
import java.lang.reflect.Constructor;
import java.net.URL;
import java.net.URLClassLoader;

import javax.tools.JavaCompiler;
import javax.tools.StandardJavaFileManager;
import javax.tools.ToolProvider;
import javax.tools.JavaCompiler.CompilationTask;

public class Proxy {
	public static Object newProxyInstance(Class infce) throws Exception { //JDK6 Complier API, CGLib, ASM
		String src = 
		"package com.bjsxt.proxy;" + 
		"public class TankTimeProxy implements " + infce +  "{" +
			"public TankTimeProxy(Moveable t) {" +
				"super();" +
				"this.t = t;" +
			"}" +
		
			"Moveable t;" +
						
			"@Override" +
			"public void move() {" +
				"long start = System.currentTimeMillis();" +
				"System.out.println(\"starttime:\" + start);" +
				"t.move();" +
				"long end = System.currentTimeMillis();" +
				"System.out.println(\"time:\" + (end-start));" +
			"}" +
		"}";
		
		String fileName = System.getProperty("user.dir") 
			+ "/src/com/bjsxt/proxy/TankTimeProxy.java";
		File f = new File(fileName);
		FileWriter fw = new FileWriter(f);
		fw.write(src);
		fw.flush();
		fw.close();
		
		//compile
		JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();
		StandardJavaFileManager fileMgr = compiler.getStandardFileManager(null, null, null);
		Iterable units = fileMgr.getJavaFileObjects(fileName);
		CompilationTask t = compiler.getTask(null, fileMgr, null, null, null, units);
		t.call();
		fileMgr.close();
		
		//load into memory and create an instance
		URL[] urls = new URL[] {new URL("file:/" + System.getProperty("user.dir") +"/src")};
		URLClassLoader ul = new URLClassLoader(urls);
		Class c = ul.loadClass("com.bjsxt.proxy.TankTimeProxy");
		System.out.println(c);
		
		Constructor ctr = c.getConstructor(Moveable.class);
		Moveable m = (Moveable)ctr.newInstance(new Tank());
		m.move();

		return null;
	}
}
